name:           feldspar-language
version:        0.6.1.0
synopsis:       A functional embedded language for DSP and parallelism
description:    Feldspar (Functional Embedded Language for DSP and PARallelism)
                is an embedded DSL for describing digital signal processing
                algorithms. This package contains the language front-end and an
                interpreter.
category:       Language
copyright:      Copyright (c) 2013 Emil Axelsson, Peter Jonsson,
                                   Anders Persson, Josef Svenningsson
                Copyright (c) 2012 Emil Axelsson, Gergely DÃ©vai,
                                   Anders Persson, Josef Svenningsson
                Copyright (c) 2009-2011, ERICSSON AB
author:         Functional programming group at Chalmers University of Technology
maintainer:     Emil Axelsson <emax@chalmers.se>,
                Anders Persson <anders.cj.persson@gmail.com>
license:        BSD3
license-file:   LICENSE
stability:      experimental
homepage:       http://feldspar.github.com
bug-reports:    https://github.com/feldspar/feldspar-language/issues
build-type:     Custom
cabal-version:  >= 1.14
tested-with:    GHC==8.0.2, GHC==8.4.4

extra-source-files:
  examples/Examples/Simple/Basics.hs
  examples/Tutorial/*.lhs

source-repository head
  type:     git
  location: git://github.com/Feldspar/feldspar-language.git

library
  exposed-modules:
    Feldspar
    Feldspar.Lattice
    Feldspar.Range
    Feldspar.Core.AdjustBindings
    Feldspar.Core.Eval
    Feldspar.Core.Language
    Feldspar.Core.NestedTuples
    Feldspar.Core.Reify
    Feldspar.Core.Representation
    Feldspar.Core.Semantics
    Feldspar.Core.SizeProp
    Feldspar.Core.Tuple
    Feldspar.Core.Types
    Feldspar.Core.UntypedRepresentation
    Feldspar.Core.ValueInfo
    Feldspar.Core.Middleend.Constructors
    Feldspar.Core.Middleend.CreateTasks
    Feldspar.Core.Middleend.Expand
    Feldspar.Core.Middleend.FromTyped
    Feldspar.Core.Middleend.FromTypeUtil
    Feldspar.Core.Middleend.LetSinking
    Feldspar.Core.Middleend.OptimizeUntyped
    Feldspar.Core.Middleend.PassManager
    Feldspar.Core.Middleend.PushLets
    Feldspar.Core.Middleend.UniqueVars
    Feldspar.Core.Interpretation
    Feldspar.Core.Frontend
    Feldspar.Core.Collection
    Feldspar.Core
    Feldspar.Future
    Feldspar.Memoize
    Feldspar.Mutable
    Feldspar.Onnx.Operators
    Feldspar.Option
    Feldspar.Repa
    Feldspar.Seq
    Feldspar.Stream
    Feldspar.Vector
    Feldspar.Vector.Shape
    Feldspar.SimpleVector
    Feldspar.SimpleVector.Internal
    Feldspar.SimpleVector.Push
    Feldspar.Par
    Feldspar.Algorithm.CRC
    Feldspar.Algorithm.FFT
    Feldspar.Algorithm.FFT.Push
    Feldspar.Algorithm.FFT.Twids
    Feldspar.Algorithm.FFT.Utils
    -- Compiler
    Feldspar.Compiler
    Feldspar.Compiler.Imperative.ArrayOps
    Feldspar.Compiler.Imperative.Representation
    Feldspar.Compiler.Imperative.ExternalProgram
    Feldspar.Compiler.Imperative.FromCore
    Feldspar.Compiler.Imperative.FromCore.Interpretation
    Feldspar.Compiler.Imperative.Frontend
    Feldspar.Compiler.Backend.C.CodeGeneration
    Feldspar.Compiler.Backend.C.Library
    Feldspar.Compiler.Backend.C.MachineLowering
    Feldspar.Compiler.Backend.C.Tic64x
    Feldspar.Compiler.Backend.C.Options
    Feldspar.Compiler.Backend.C.Platforms
    Feldspar.Compiler.Backend.C.RuntimeLibrary
    Feldspar.Compiler.Frontend.Interactive.Interface
    Feldspar.Compiler.Plugin
    Feldspar.Compiler.Marshal
    Feldspar.Compiler.CallConv
    Feldspar.Compiler.Compiler
    Feldspar.Compiler.Error
    Feldspar.Compiler.ExternalProgram
    Feldspar.Runtime

  default-language: Haskell2010

  build-depends:
    array,
    base                        >= 4.9.1  && < 5.9,
    base-compat                 >= 0.8,
    bytestring                  >= 0.10   && < 0.11,
    Cabal,
    containers                  >= 0.4    && < 0.7,
    data-default                >= 0.5,
    directory                   >= 1.1,
    filepath,
    ghc,
    ghci,
    ghc-paths,
    language-c-quote            >= 0.12  && < 0.13,
    mtl                         >= 2.0    && < 2.3,
    QuickCheck                  >= 2.7    && < 3,
    patch-combinators           >= 0.2    && < 0.3,
    plugins-multistage          >= 0.6.3 && < 0.7,
    prelude-edsl                             < 0.4,
    pretty,
    process,
    srcloc,
    storable-tuple              >= 0.0.2,
    storable-record             >= 0.0.2.5,
    template-haskell,
    tuple                       >= 0.2    && < 0.5,
    monad-par                   >= 0.3.4.5,
    deepseq,
    random                      >= 1.0    && < 1.2,
    data-default                >= 0.5.3  && < 0.8,
    data-hash                   >= 0.2.0.1 && < 100,
    tree-view

  cpp-options: -DCABAL_IS_USED

  c-sources:
    clib/feldspar_c99.c
    clib/taskpool.c
    clib/ivar.c

  cc-options: -std=c99 -Wall -fPIC

  if os(linux)
    extra-libraries: gcc_s pthread
      -- pthread needed on Emil's Ubuntu (15.04), but apparently not on Travis

  include-dirs:
    ./clib

  install-includes:
    feldspar_array.h
    feldspar_c99.h
    feldspar_c99.c
    feldspar_tic64x.h
    feldspar_tic64x.c
    feldspar_future.h
    log.h
    ivar.h
    ivar.c
    taskpool.h
    taskpool.c

  hs-source-dirs: src examples

  ghc-options: -freduction-depth=100

test-suite range
  type: exitcode-stdio-1.0

  hs-source-dirs: tests

  main-is: RangeTest.hs

  other-modules:
    Feldspar.Range.Test

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base,
    random           >= 1   && < 2,
    QuickCheck       >= 2.7 && < 3,
    tasty            >= 0.3,
    tasty-quickcheck >= 0.2

  ghc-options: -threaded -with-rtsopts=-maxN4

test-suite semantics
  type: exitcode-stdio-1.0

  hs-source-dirs: tests examples

  main-is: SemanticsTest.hs

  other-modules:
    Feldspar.Core.Test
    Feldspar.Stream.Test
    Feldspar.Vector.Test
    Feldspar.Mutable.Test
    Feldspar.Tuple.Test
    Examples.Simple.Basics

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base,
    QuickCheck       >= 2.7 && < 3,
    tasty            >= 0.3,
    tasty-th         >= 0.1,
    tasty-quickcheck >= 0.2

  ghc-options: -threaded -with-rtsopts=-maxN4

test-suite decoration
  type: exitcode-stdio-1.0

  hs-source-dirs: tests examples

  main-is: DecorationTests.hs

  other-modules:
    Examples.Simple.Basics
    Feldspar.Applications.TFModel
    Feldspar.Applications.TFLib

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base,
    bytestring            >= 0.10 && < 0.11,
    tasty                 >= 0.3,
    tasty-golden          >= 2.3,
    utf8-string           >= 0.3.7

  ghc-options: -threaded -with-rtsopts=-maxN4

test-suite tutorial
  type: exitcode-stdio-1.0

  hs-source-dirs: tests examples

  main-is: TutorialTest.hs

  other-modules:
    Tutorial.Basic
    Tutorial.Array
    Tutorial.Patch
    Tutorial.Size
    Tutorial.SimpleVector
    Tutorial.Vector

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base,
    bytestring         >= 0.9 && < 0.11

  ghc-options: -threaded -with-rtsopts=-maxN4

test-suite regression
  type: exitcode-stdio-1.0

  hs-source-dirs: tests

  main-is: RegressionTests.hs

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    mtl,
    base,
    Cabal,
    process,
    bytestring       >= 0.9 && < 0.11,
    stringsearch     >= 0.3,
    tasty            >= 0.3,
    tasty-golden     >= 2.3.0.1,
    tasty-quickcheck >= 0.3,
    QuickCheck       >= 2.7.1 && < 3.0

test-suite callconv
  type: exitcode-stdio-1.0

  hs-source-dirs: tests

  main-is: CallingConvention.hs

  default-language: Haskell2010

  build-depends:
    feldspar-language,
    base,
    tasty            >= 0.3,
    tasty-quickcheck >= 0.3,
    QuickCheck       >= 2.7.1 && < 3.0

custom-setup
  setup-depends:
    base,
    Cabal,
    filepath,
    process
